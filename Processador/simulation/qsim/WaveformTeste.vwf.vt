// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/14/2023 20:32:27"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          UnidadedeProcessamento
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module UnidadedeProcessamento_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [15:0] Interruptores;
reg clock;
// wires                                               
wire [6:0] Display1;
wire [6:0] Display2;
wire [6:0] Display3;
wire [6:0] Display4;
wire [31:0] Inst;
wire [31:0] Out_ULA;
wire [31:0] Wave_Dado1;
wire [31:0] Wave_Saida_AluSrc;
wire [31:0] Wave_Saida_MemToReg;
wire [31:0] Wave_Saida_RegDST;
wire [3:0] Wave_Unit_Control_ALU;
wire [4:0] auxRS;
wire [4:0] auxRT;
wire led;
wire zero;

// assign statements (if any)                          
UnidadedeProcessamento i1 (
// port map - connection between master ports and signals/registers   
	.Display1(Display1),
	.Display2(Display2),
	.Display3(Display3),
	.Display4(Display4),
	.Inst(Inst),
	.Interruptores(Interruptores),
	.Out_ULA(Out_ULA),
	.Wave_Dado1(Wave_Dado1),
	.Wave_Saida_AluSrc(Wave_Saida_AluSrc),
	.Wave_Saida_MemToReg(Wave_Saida_MemToReg),
	.Wave_Saida_RegDST(Wave_Saida_RegDST),
	.Wave_Unit_Control_ALU(Wave_Unit_Control_ALU),
	.auxRS(auxRS),
	.auxRT(auxRT),
	.clock(clock),
	.led(led),
	.zero(zero)
);
initial 
begin 
#1000000 $finish;
end 
// Interruptores[ 15 ]
initial
begin
	Interruptores[15] = 1'b0;
end 
// Interruptores[ 14 ]
initial
begin
	Interruptores[14] = 1'b0;
end 
// Interruptores[ 13 ]
initial
begin
	Interruptores[13] = 1'b0;
end 
// Interruptores[ 12 ]
initial
begin
	Interruptores[12] = 1'b0;
end 
// Interruptores[ 11 ]
initial
begin
	Interruptores[11] = 1'b0;
end 
// Interruptores[ 10 ]
initial
begin
	Interruptores[10] = 1'b0;
end 
// Interruptores[ 9 ]
initial
begin
	Interruptores[9] = 1'b0;
end 
// Interruptores[ 8 ]
initial
begin
	Interruptores[8] = 1'b0;
end 
// Interruptores[ 7 ]
initial
begin
	Interruptores[7] = 1'b0;
end 
// Interruptores[ 6 ]
initial
begin
	Interruptores[6] = 1'b0;
end 
// Interruptores[ 5 ]
initial
begin
	Interruptores[5] = 1'b0;
end 
// Interruptores[ 4 ]
initial
begin
	Interruptores[4] = 1'b0;
end 
// Interruptores[ 3 ]
initial
begin
	Interruptores[3] = 1'b0;
end 
// Interruptores[ 2 ]
initial
begin
	Interruptores[2] = 1'b0;
end 
// Interruptores[ 1 ]
initial
begin
	Interruptores[1] = 1'b0;
end 
// Interruptores[ 0 ]
initial
begin
	Interruptores[0] = 1'b0;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #10000 1'b1;
	#10000;
end 
endmodule

